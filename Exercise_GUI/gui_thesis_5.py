# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_Thesis.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import QMessageBox, QInputDialog, QApplication, QWidget, QLineEdit, QFileDialog, QSizeGrip, QSlider
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon
import os
import time
import glob
import re

from PyQt5 import QtCore, QtGui, QtWidgets

#Auto Read entities
dict_entities={}
path='list_entities - V4-tes/'
for filename in glob.glob(os.path.join(path, '*.txt')):
    gist_file = open(filename, "r", encoding = "ISO-8859-1")
    try:
        content = gist_file.read().lower()
        dict_entities[re.search(r'(\w+).txt$',filename).group(1)] = list(filter(None, content.split("\n")))
    finally:
        gist_file.close()

# #Preparation
all_sents = []
result = sum(list(dict_entities.values()), [])

class Ui_MainWindow(object):
    def __init__(self, num_text=-1, name_gpetro=[], name_gmeth=[], name_gloc=[], name_gtime=[],
                status_count_entities=0, stoper = result, list_text = [], path=None, name_file = None,
                 status_gtime=False, status_gmeth=False, status_gloc=False, status_gpetro = False):

        self.name_file = name_file
        self.path = path
        self.stoper = stoper
        self.count_entities = status_count_entities
        self.list_gpetro = name_gpetro
        self.list_gmeth = name_gmeth
        self.list_gloc = name_gloc
        self.list_gtime = name_gtime
        self.num = num_text
        self.list_text = list_text
        self.status_GeoTime = status_gtime
        self.status_GeoPetro = status_gpetro
        self.status_GeoMeth = status_gmeth
        self.status_GeoLoc = status_gloc

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(751, 424)
        MainWindow.setWindowIcon(QIcon("image/cgre.PNG"))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(751, 373))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 424))
        font = QtGui.QFont()
        font.setPointSize(9)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(751, 373))
        self.centralwidget.setMaximumSize(QtCore.QSize(16777215, 373))
        self.centralwidget.setStyleSheet("*{\n"
"    color: #000;\n"
"    border: none\n"
"}\n"
"\n"
"#leftMenu{\n"
"    background-color: #2596be;\n"
"}\n"
"\n"
"#mainBody{\n"
"    background-color: #eeeee4;\n"
"}\n"
"\n"
"QLineEdit{\n"
"    background: transparent;\n"
"    border: 2px solid #2596be;\n"
"    color: #2596be;\n"
"}\n"
" \n"
"#appHeader{\n"
"    color: #2596be;\n"
"}\n"
"\n"
"#butNextAssign{\n"
"    background-color: #2596be;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"#butLabelsStatus{\n"
"    background-color: #2596be;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"#butinputfile{\n"
"    background-color: #2596be;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"#butCancel{\n"
"    background-color: #000000;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"#butgotonum{\n"
"    background-color: #2596be;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"\n"
"#butSubmit{\n"
"    background-color: #000000;\n"
"    color: #fff;\n"
"    border-radius: 3px;\n"
"}\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.mainBody = QtWidgets.QWidget(self.centralwidget)
        self.mainBody.setGeometry(QtCore.QRect(0, 0, 800, 373))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainBody.sizePolicy().hasHeightForWidth())
        self.mainBody.setSizePolicy(sizePolicy)
        self.mainBody.setMinimumSize(QtCore.QSize(751, 373))
        self.mainBody.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.mainBody.setStyleSheet("#mainBody{\n"
"    background-color: #eeeee4;\n"
"}")
        self.mainBody.setObjectName("mainBody")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.mainBody)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.headerFrame = QtWidgets.QWidget(self.mainBody)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.headerFrame.sizePolicy().hasHeightForWidth())
        self.headerFrame.setSizePolicy(sizePolicy)
        self.headerFrame.setMinimumSize(QtCore.QSize(736, 65))
        self.headerFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.headerFrame.setObjectName("headerFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.headerFrame)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.headerFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setObjectName("widget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.menuBtn = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.menuBtn.sizePolicy().hasHeightForWidth())
        self.menuBtn.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.menuBtn.setFont(font)
        self.menuBtn.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("image/cgre.PNG"))
        self.menuBtn.setIcon(icon)
        self.menuBtn.setIconSize(QtCore.QSize(32, 32))
        self.menuBtn.setObjectName("menuBtn")
        self.horizontalLayout_5.addWidget(self.menuBtn)
        self.appHeader = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.appHeader.sizePolicy().hasHeightForWidth())
        self.appHeader.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.appHeader.setFont(font)
        self.appHeader.setObjectName("appHeader")
        self.horizontalLayout_5.addWidget(self.appHeader)
        self.horizontalLayout.addWidget(self.widget, 0, QtCore.Qt.AlignLeft)
        self.widget_17 = QtWidgets.QWidget(self.headerFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_17.sizePolicy().hasHeightForWidth())
        self.widget_17.setSizePolicy(sizePolicy)
        self.widget_17.setObjectName("widget_17")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget_17)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.labelFeedText = QtWidgets.QLabel(self.widget_17)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.labelFeedText.setFont(font)
        self.labelFeedText.setScaledContents(True)
        self.labelFeedText.setWordWrap(True)
        self.labelFeedText.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.labelFeedText.setObjectName("labelFeedText")
        self.horizontalLayout_7.addWidget(self.labelFeedText)
        self.horizontalLayout.addWidget(self.widget_17)
        self.widget_3 = QtWidgets.QWidget(self.headerFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_3.sizePolicy().hasHeightForWidth())
        self.widget_3.setSizePolicy(sizePolicy)
        self.widget_3.setMinimumSize(QtCore.QSize(50, 0))
        self.widget_3.setSizeIncrement(QtCore.QSize(50, 0))
        self.widget_3.setBaseSize(QtCore.QSize(50, 0))
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_9 = QtWidgets.QLabel(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setMinimumSize(QtCore.QSize(30, 30))
        self.label_9.setMaximumSize(QtCore.QSize(30, 30))
        self.label_9.setSizeIncrement(QtCore.QSize(30, 30))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/blueocean_icons/icons/blue_ocean/file-text.svg"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_4.addWidget(self.label_9)
        self.frame_6 = QtWidgets.QFrame(self.widget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_6.sizePolicy().hasHeightForWidth())
        self.frame_6.setSizePolicy(sizePolicy)
        self.frame_6.setMinimumSize(QtCore.QSize(110, 0))
        self.frame_6.setMaximumSize(QtCore.QSize(110, 16777215))
        self.frame_6.setSizeIncrement(QtCore.QSize(80, 0))
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.frame_6)
        self.verticalLayout_9.setContentsMargins(-1, 1, -1, -1)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.statusData = QtWidgets.QLabel(self.frame_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.statusData.sizePolicy().hasHeightForWidth())
        self.statusData.setSizePolicy(sizePolicy)
        self.statusData.setMinimumSize(QtCore.QSize(100, 14))
        self.statusData.setMaximumSize(QtCore.QSize(100, 16777215))
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        self.statusData.setFont(font)
        self.statusData.setObjectName("statusData")
        self.verticalLayout_9.addWidget(self.statusData)
        self.butLabelsStatus = QtWidgets.QPushButton(self.frame_6)
        self.butLabelsStatus.setMinimumSize(QtCore.QSize(95, 16))
        self.butLabelsStatus.setMaximumSize(QtCore.QSize(95, 16))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.butLabelsStatus.setFont(font)
        self.butLabelsStatus.setObjectName("butLabelsStatus")
        self.verticalLayout_9.addWidget(self.butLabelsStatus)
        self.butinputfile = QtWidgets.QPushButton(self.frame_6)
        self.butinputfile.setMinimumSize(QtCore.QSize(95, 16))
        self.butinputfile.setMaximumSize(QtCore.QSize(95, 16))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.butinputfile.setFont(font)
        self.butinputfile.setObjectName("butinputfile")
        self.verticalLayout_9.addWidget(self.butinputfile)
        self.horizontalLayout_4.addWidget(self.frame_6)
        self.horizontalLayout.addWidget(self.widget_3, 0, QtCore.Qt.AlignRight)
        self.verticalLayout.addWidget(self.headerFrame, 0, QtCore.Qt.AlignLeft)
        self.cardsFrame = QtWidgets.QWidget(self.mainBody)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(250)
        sizePolicy.setHeightForWidth(self.cardsFrame.sizePolicy().hasHeightForWidth())
        self.cardsFrame.setSizePolicy(sizePolicy)
        self.cardsFrame.setMinimumSize(QtCore.QSize(746, 240))
        self.cardsFrame.setMaximumSize(QtCore.QSize(746, 240))
        self.cardsFrame.setSizeIncrement(QtCore.QSize(0, 250))
        self.cardsFrame.setBaseSize(QtCore.QSize(0, 250))
        self.cardsFrame.setObjectName("cardsFrame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.cardsFrame)
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetMinAndMaxSize)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.widget_6 = QtWidgets.QWidget(self.cardsFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(250)
        sizePolicy.setHeightForWidth(self.widget_6.sizePolicy().hasHeightForWidth())
        self.widget_6.setSizePolicy(sizePolicy)
        self.widget_6.setMinimumSize(QtCore.QSize(267, 250))
        self.widget_6.setMaximumSize(QtCore.QSize(746, 250))
        self.widget_6.setSizeIncrement(QtCore.QSize(0, 250))
        self.widget_6.setBaseSize(QtCore.QSize(0, 250))
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_4.setContentsMargins(-1, 0, -1, -1)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frameCrease = QtWidgets.QFrame(self.widget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameCrease.sizePolicy().hasHeightForWidth())
        self.frameCrease.setSizePolicy(sizePolicy)
        self.frameCrease.setMinimumSize(QtCore.QSize(245, 210))
        self.frameCrease.setMaximumSize(QtCore.QSize(746, 210))
        self.frameCrease.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameCrease.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameCrease.setObjectName("frameCrease")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frameCrease)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 10)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.widget_5 = QtWidgets.QWidget(self.frameCrease)
        self.widget_5.setMinimumSize(QtCore.QSize(745, 50))
        self.widget_5.setMaximumSize(QtCore.QSize(745, 50))
        self.widget_5.setObjectName("widget_5")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.widget_5)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.butNextAssign = QtWidgets.QPushButton(self.widget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butNextAssign.sizePolicy().hasHeightForWidth())
        self.butNextAssign.setSizePolicy(sizePolicy)
        self.butNextAssign.setMinimumSize(QtCore.QSize(240, 27))
        self.butNextAssign.setMaximumSize(QtCore.QSize(240, 27))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.butNextAssign.setFont(font)
        self.butNextAssign.setAutoFillBackground(False)
        self.butNextAssign.setObjectName("butNextAssign")
        self.horizontalLayout_6.addWidget(self.butNextAssign)
        self.butgotonum = QtWidgets.QPushButton(self.widget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.butgotonum.sizePolicy().hasHeightForWidth())
        self.butgotonum.setSizePolicy(sizePolicy)
        self.butgotonum.setMinimumSize(QtCore.QSize(150, 27))
        self.butgotonum.setMaximumSize(QtCore.QSize(150, 27))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.butgotonum.setFont(font)
        self.butgotonum.setAutoFillBackground(False)
        self.butgotonum.setObjectName("butgotonum")
        self.horizontalLayout_6.addWidget(self.butgotonum)
        self.lineEdit_21 = QtWidgets.QLineEdit(self.widget_5)
        self.lineEdit_21.setMinimumSize(QtCore.QSize(50, 19))
        self.lineEdit_21.setMaximumSize(QtCore.QSize(50, 32))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_21.setFont(font)
        self.lineEdit_21.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.horizontalLayout_6.addWidget(self.lineEdit_21)
        self.verticalLayout_5.addWidget(self.widget_5)
        self.widget_28 = QtWidgets.QWidget(self.frameCrease)
        self.widget_28.setMinimumSize(QtCore.QSize(241, 28))
        self.widget_28.setMaximumSize(QtCore.QSize(745, 28))
        self.widget_28.setObjectName("widget_28")
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout(self.widget_28)
        self.horizontalLayout_12.setContentsMargins(5, 0, 0, 0)
        self.horizontalLayout_12.setSpacing(50)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.checkGeoMeth = QtWidgets.QCheckBox(self.widget_28)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkGeoMeth.setFont(font)
        self.checkGeoMeth.setObjectName("checkGeoMeth")
        self.horizontalLayout_12.addWidget(self.checkGeoMeth, 0, QtCore.Qt.AlignHCenter)
        self.checkGeoLoc = QtWidgets.QCheckBox(self.widget_28)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkGeoLoc.setFont(font)
        self.checkGeoLoc.setObjectName("checkGeoLoc")
        self.horizontalLayout_12.addWidget(self.checkGeoLoc)
        self.checkGeoPetro = QtWidgets.QCheckBox(self.widget_28)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkGeoPetro.setFont(font)
        self.checkGeoPetro.setObjectName("checkGeoPetro")
        self.horizontalLayout_12.addWidget(self.checkGeoPetro)
        self.checkGeoTime = QtWidgets.QCheckBox(self.widget_28)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.checkGeoTime.setFont(font)
        self.checkGeoTime.setObjectName("checkGeoTime")
        self.horizontalLayout_12.addWidget(self.checkGeoTime, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_5.addWidget(self.widget_28, 0, QtCore.Qt.AlignHCenter)
        self.widget_2 = QtWidgets.QWidget(self.frameCrease)
        self.widget_2.setMinimumSize(QtCore.QSize(241, 28))
        self.widget_2.setMaximumSize(QtCore.QSize(746, 56))
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_2.setSpacing(3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.labelInputWord = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelInputWord.sizePolicy().hasHeightForWidth())
        self.labelInputWord.setSizePolicy(sizePolicy)
        self.labelInputWord.setMaximumSize(QtCore.QSize(100, 32))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.labelInputWord.setFont(font)
        self.labelInputWord.setObjectName("labelInputWord")
        self.horizontalLayout_2.addWidget(self.labelInputWord)
        self.lineEdit_20 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_20.setMinimumSize(QtCore.QSize(500, 19))
        self.lineEdit_20.setMaximumSize(QtCore.QSize(500, 32))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_20.setFont(font)
        self.lineEdit_20.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.horizontalLayout_2.addWidget(self.lineEdit_20)
        self.verticalLayout_5.addWidget(self.widget_2)
        self.widget_8 = QtWidgets.QWidget(self.frameCrease)
        self.widget_8.setMinimumSize(QtCore.QSize(745, 50))
        self.widget_8.setMaximumSize(QtCore.QSize(745, 50))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.widget_8.setFont(font)
        self.widget_8.setObjectName("widget_8")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.widget_8)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.butCancel = QtWidgets.QPushButton(self.widget_8)
        self.butCancel.setMinimumSize(QtCore.QSize(110, 30))
        self.butCancel.setMaximumSize(QtCore.QSize(110, 30))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.butCancel.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.butCancel.setFont(font)
        self.butCancel.setObjectName("butCancel")
        self.horizontalLayout_8.addWidget(self.butCancel)
        self.butSubmit = QtWidgets.QPushButton(self.widget_8)
        self.butSubmit.setMinimumSize(QtCore.QSize(110, 30))
        self.butSubmit.setMaximumSize(QtCore.QSize(110, 30))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.butSubmit.setFont(font)
        self.butSubmit.setObjectName("butSubmit")
        self.horizontalLayout_8.addWidget(self.butSubmit)
        self.verticalLayout_5.addWidget(self.widget_8)
        self.verticalLayout_4.addWidget(self.frameCrease)
        self.verticalLayout_2.addWidget(self.widget_6)
        self.verticalLayout.addWidget(self.cardsFrame, 0, QtCore.Qt.AlignLeft)
        font = QtGui.QFont()
        font.setFamily("Nunito")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 751, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # MULTI FILE BUTTON
        self.butinputfile.clicked.connect(self.data_input_text)

        # #BUTTON LABEL
        # self.checkGeoLoc.toggled.connect(lambda: self.param_boxbound())
        # self.checkGeoMeth.toggled.connect(lambda: self.param_calcint())
        # self.checkGeoPetro.toggled.connect(lambda: self.param_simpsubd())
        # self.checkGeoTime.toggled.connect(lambda: self.param_simpsubd())
        #
        # #BUTTON
        self.butSubmit.clicked.connect(self.submit)
        self.butgotonum.clicked.connect(self.gotonum)
        self.butCancel.clicked.connect(self.cancel)
        self.butLabelsStatus.clicked.connect(self.status_popup)
        self.butNextAssign.clicked.connect(self.next_assign)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GeoBERT Labeler"))
        self.appHeader.setText(_translate("MainWindow", "GeoBERT"))
        self.labelFeedText.setText(_translate("MainWindow", "Text Here"))
        self.statusData.setText(_translate("MainWindow", "Empty Data"))
        self.butLabelsStatus.setText(_translate("MainWindow", "History Labels"))
        self.butinputfile.setText(_translate("MainWindow", "Input File"))
        self.butNextAssign.setText(_translate("MainWindow", "Next Assignment"))
        self.butgotonum.setText(_translate("MainWindow", "Go To"))
        self.checkGeoMeth.setText(_translate("MainWindow", "GeoMeth"))
        self.checkGeoLoc.setText(_translate("MainWindow", "GeoLoc"))
        self.checkGeoPetro.setText(_translate("MainWindow", "GeoPetro"))
        self.checkGeoTime.setText(_translate("MainWindow", "GeoTime"))
        self.labelInputWord.setText(_translate("MainWindow", "Input Word"))
        self.butCancel.setText(_translate("MainWindow", "Cancel"))
        self.butSubmit.setText(_translate("MainWindow", "Submit"))

#INPUT TEXT FILE
    def data_input_text(self):
            self.open_dialog_box_cage()

    def open_dialog_box_cage(self):
            self.list_text = []
            try:
                    filename = QFileDialog.getOpenFileName()
                    a = str(filename[0])
                    self.path = a
                    with open(self.path, 'r', encoding='utf-8') as f:
                            lines = f.read()
                    c = lines.split('\n')
                    for i in c:
                            self.list_text.append(i)

                    self.statusData.setText("Data Ready !")
                    self.status_name()
            except:
                    pass

    def status_name(self):
            for i in range(len(self.path) - 1, -1, -1):
                    if self.path[i] != '/':
                            continue
                    else:
                            a = self.path[i + 1:]
                            break

            self.name_file = a

    #NEXT ASSIGN
    def next_assign(self):
            try:
                    try:
                            self.num = self.num + 100
                            self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))
                    except:
                            self.error_calling('No More Text!')
            except:
                    self.error_calling('Error, Please Input The Text Data')

    #GO TO NUM
    def gotonum(self):
            try:
                    self.num = int(self.lineEdit_21.text())
                    self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))
                    self.num = self.num + 1
            except:
                    self.error_calling('Error, Please Input The Text Data and the Number')

    #SUBMIT & CANCEL LABELS
    def submit(self):

            tes = str(self.lineEdit_20.text())

            if self.checkGeoMeth.isChecked() == True \
                    and self.checkGeoPetro.isChecked() == False \
                    and self.checkGeoTime.isChecked() == False \
                    and self.checkGeoLoc.isChecked() == False:
                f = open('geometh.txt', 'a')
                f.write(tes + "\n")
                f.close()
                self.count_entities = self.count_entities + 1
                self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                self.stoper.append(tes)
                self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

            elif self.checkGeoMeth.isChecked() == False \
                    and self.checkGeoPetro.isChecked() == True \
                    and self.checkGeoTime.isChecked() == False \
                    and self.checkGeoLoc.isChecked() == False:
                f = open('geopet.txt', 'a')
                f.write(tes + "\n")
                f.close()
                self.count_entities = self.count_entities + 1
                self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                self.stoper.append(tes)
                self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

            elif self.checkGeoMeth.isChecked() == False \
                    and self.checkGeoPetro.isChecked() == False \
                    and self.checkGeoTime.isChecked() == True \
                    and self.checkGeoLoc.isChecked() == False:
                f = open('geotime.txt', 'a')
                f.write(tes + "\n")
                f.close()
                self.count_entities = self.count_entities + 1
                self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                self.stoper.append(tes)
                self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

            elif self.checkGeoMeth.isChecked() == False \
                    and self.checkGeoPetro.isChecked() == False \
                    and self.checkGeoTime.isChecked() == False \
                    and self.checkGeoLoc.isChecked() == True:
                f = open('geoloc.txt', 'a')
                f.write(tes + "\n")
                f.close()
                self.count_entities = self.count_entities + 1
                self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                self.stoper.append(tes)
                self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

            else:
                self.error_calling('Error, Please Assign one Label only !')

    def cancel(self):
            tes = str(self.lineEdit_20.text())
            try:
                    if self.checkGeoMeth.isChecked() == True \
                            and self.checkGeoPetro.isChecked() == False \
                            and self.checkGeoTime.isChecked() == False \
                            and self.checkGeoLoc.isChecked() == False:

                        with open('geometh.txt', 'r') as f:
                                nih = f.read()
                        print(f)
                        c = nih.split('\n')
                        c.remove(tes)
                        self.stoper.remove(tes)

                        with open('geometh.txt', 'w') as f:
                                for i in c:
                                        f.write(i)
                                        f.write('\n')
                                f.close()
                        self.count_entities = self.count_entities - 1
                        self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                        self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

                    elif self.checkGeoMeth.isChecked() == False \
                            and self.checkGeoPetro.isChecked() == True \
                            and self.checkGeoTime.isChecked() == False \
                            and self.checkGeoLoc.isChecked() == False:

                        with open('geopet.txt', 'r') as f:
                                nih = f.read()
                        print(f)
                        c = nih.split('\n')
                        c.remove(tes)
                        self.stoper.remove(tes)

                        with open('geopet.txt', 'w') as f:
                                for i in c:
                                        f.write(i)
                                        f.write('\n')
                                f.close()
                        self.count_entities = self.count_entities - 1
                        self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                        self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

                    elif self.checkGeoMeth.isChecked() == False \
                            and self.checkGeoPetro.isChecked() == False \
                            and self.checkGeoTime.isChecked() == True \
                            and self.checkGeoLoc.isChecked() == False:

                            with open('geotime.txt', 'r') as f:
                                    nih = f.read()
                            print(f)
                            c = nih.split('\n')
                            c.remove(tes)
                            self.stoper.remove(tes)

                            with open('geotime.txt', 'w') as f:
                                    for i in c:
                                            f.write(i)
                                            f.write('\n')
                                    f.close()
                            self.count_entities = self.count_entities - 1
                            self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                            self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))


                    elif self.checkGeoMeth.isChecked() == False \
                            and self.checkGeoPetro.isChecked() == False \
                            and self.checkGeoTime.isChecked() == False \
                            and self.checkGeoLoc.isChecked() == True:

                        with open('geoloc.txt', 'r') as f:
                                nih = f.read()
                        print(f)
                        c = nih.split('\n')
                        c.remove(tes)
                        self.stoper.remove(tes)

                        with open('geoloc.txt', 'w') as f:
                                for i in c:
                                        f.write(i)
                                        f.write('\n')
                                f.close()
                        self.count_entities = self.count_entities - 1
                        self.statusData.setText("Recorded: {}".format(str(self.count_entities)))
                        self.labelFeedText.setText(str(self.num) + '. ' + self.checki(self.list_text[self.num]))

                    else:
                        self.error_calling('Error, Please Assign one Label only !')
            except:
                    self.error_calling('The Entity not labeled yet !')


    # Status Popup
    def status_popup(self):
            psx = QMessageBox()
            psx.setGeometry(1000, 600, 1000, 600)
            psx.setWindowTitle('Labelling History')
            psx.setText('Summary of Entities for')
            psx.setIcon(QMessageBox.Information)
            psx.setStandardButtons(QMessageBox.Ok | QMessageBox.Close)
            psx.setInformativeText('Show Details for All Recorded Entities from: ' + self.name_file)

            d = open('geometh.txt')
            lines_meth = str(d.read())

            h = open('geopet.txt')
            lines_pet = str(h.read())

            k = open('geoloc.txt')
            lines_loc = str(k.read())

            n = open('geotime.txt')
            lines_time = str(h.read())

            lines = str(
                    'GEO-METH:' + '\n' + '--------------' + '\n' + lines_meth + '\n' +
                    '\n' + 'GEO-PETRO:' + '\n' + '--------------' + '\n' + lines_pet +
                    '\n' + 'GEO-LOC:' + '\n' + '--------------' + '\n' + lines_loc +
                    '\n' + 'GEO-TIME:' + '\n' + '--------------' + '\n' + lines_time)

            psx.setDetailedText(lines)


            x = psx.exec_()

    #STRIKE-THROUGH
    def strike(self, text):
            result = ''
            for c in text:
                    result = result + c + '\u0336'
            return result

    #CHECK
    def checki(self, text):
            pat = r",*(\b(?:{})(?:e*s*))\b".format("|".join(self.stoper))
            sear = re.findall(pat, text)
            if type(sear[0]) == tuple:
                    c = []
                    for i, m in enumerate(sear):
                            c.append(list(filter(None, [d for d in m])))
                    sear = sum(c, [])
            else:
                    pass

            for i in sear:
                    text = re.sub(i, self.strike(i), text)

            return text

    # Calling Error
    def error_calling(self, text):
            psy = QMessageBox()
            psy.setGeometry(640, 480, 200, 200)
            psy.setWindowTitle('Process Error')
            psy.setText(text)
            psy.setIcon(QMessageBox.Critical)
            psy.setStandardButtons(QMessageBox.Ok)
            psy.setDefaultButton(QMessageBox.Ok)

            x = psy.exec_()

    # #CHECK LABELS
    # def check_geometh(self):
    #     if self.checkGeoMeth.isChecked() == True:
    #             self.status_GeoMeth= True
    #
    #     else:
    #             self.status_GeoMeth = False
    #
    # def check_geoloc(self):
    #     if self.checkGeoLoc.isChecked() == True:
    #             self.status_GeoLoc= True
    #
    #     else:
    #             self.status_GeoLoc = False
    #
    # def check_geotime(self):
    #     if self.checkGeoTime.isChecked() == True:
    #             self.status_GeoTime= True
    #
    #     else:
    #             self.status_GeoTime = False
    #
    # def check_geopetro(self):
    #     if self.checkGeoPetro.isChecked() == True:
    #             self.status_GeoPetro= True
    #
    #     else:
    #             self.status_GeoPetro = False

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
